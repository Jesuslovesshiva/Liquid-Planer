{"mappings":"AAAA;AAEA,MAAM;IACJ,YAAY,IAAI,EAAE,KAAK,CAAE;QACvB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,UAAU,GAAG,EAAE;QACpB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB;IACpC;IAEA,aAAa;QACX,OAAO,IAAI,CAAC,UAAU;IACxB;IAEA,SAAS;QACP,IAAI,CAAC,cAAc;IACrB;IAEA,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,OAAO;QACL,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,OAAO;QACL,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,oBAAoB,OAAO,EAAE;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,cAAc;IACrB;IAEA,uBAAuB;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,WAAW,YAAc;YAC7C,IAAI,UAAU,KAAK,KAAK,UAAU,KAAK,IACrC,OAAO;iBACF,IAAI,UAAU,KAAK,KAAK,UAAU,KAAK,IAC5C,OAAO;iBACF;gBACL,IAAI,UAAU,SAAS,KAAK,UAAU,SAAS,IAC7C,OAAO;qBAEP,OAAO;YAEX,CAAC;QACH;IACF;IAEA,eAAe;QACb,IAAI,eAAe;QACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,UAAY;YACnC,IAAI,QAAQ,GAAG,OAAO,YACpB,gBAAgB,QAAQ,MAAM;iBAE9B,gBAAgB,QAAQ,MAAM;QAElC;QACA,IAAI,CAAC,OAAO,GAAG;IACjB;IAEA,mBAAmB;QACjB,IAAI,cAAc,SAAS,aAAa,CAAC;QACzC,YAAY,YAAY,CAAC,SAAS;QAClC,6CAA6C;QAC7C,YAAY,YAAY,CAAC,aAAa,IAAI,CAAC,KAAK;QAChD,YAAY,YAAY,CAAC,cAAc,IAAI,CAAC,MAAM;QAElD,IAAI,eAAe,SAAS,aAAa,CAAC;QAE1C,IAAI,aAAa,SAAS,aAAa,CAAC;QACxC,WAAW,YAAY,CAAC,SAAS;QACjC,WAAW,WAAW,GAAG,CAAC,EAAE,IAAI,KAC9B,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,GAAG,GACd,cAAc,CAAC,SAAS;YACxB,OAAO;YACP,MAAM;QACR,GAAG,CAAC;QACJ,aAAa,qBAAqB,CAAC,cAAc;QAEjD,IAAI,eAAe,SAAS,aAAa,CAAC;QAC1C,IAAI,IAAI,CAAC,OAAO,IAAI,GAClB,aAAa,YAAY,CAAC,SAAS;aAEnC,aAAa,YAAY,CAAC,SAAS;QAErC,aAAa,WAAW,GAAG,CAAC,EAAE,AAAC,CAAA,IAAI,CAAC,OAAO,GAAG,GAAE,EAC7C,OAAO,CAAC,GACR,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC;QACzB,aAAa,qBAAqB,CAAC,aAAa;QAEhD,YAAY,qBAAqB,CAAC,cAAc;QAEhD,IAAI,gBAAgB,SAAS,aAAa,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,UAAY;YACnC,cAAc,qBAAqB,CAAC,aAAa,QAAQ,IAAI;QAC/D;QACA,YAAY,qBAAqB,CAAC,aAAa;QAE/C,OAAO;IACT;IAEA,iBAAiB;QACf,IAAI,CAAC,oBAAoB;QACzB,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB;IACpC;AACF","sources":["Haushaltsbuch/src/js/classes/Monatsliste.js"],"sourcesContent":["\"use strict\";\r\n\r\nclass Monatsliste {\r\n  constructor(jahr, monat) {\r\n    this._jahr = jahr;\r\n    this._monat = monat;\r\n    this._eintraege = [];\r\n    this._bilanz = 0;\r\n    this._html = this._html_generieren();\r\n  }\r\n\r\n  getEntries() {\r\n    return this._eintraege;\r\n  }\r\n\r\n  update() {\r\n    this._aktualisieren();\r\n  }\r\n\r\n  monat() {\r\n    return this._monat;\r\n  }\r\n\r\n  jahr() {\r\n    return this._jahr;\r\n  }\r\n\r\n  html() {\r\n    return this._html;\r\n  }\r\n\r\n  eintrag_hinzufuegen(eintrag) {\r\n    this._eintraege.push(eintrag);\r\n    this._aktualisieren();\r\n  }\r\n\r\n  _eintraege_sortieren() {\r\n    this._eintraege.sort((eintrag_a, eintrag_b) => {\r\n      if (eintrag_a.datum() > eintrag_b.datum()) {\r\n        return -1;\r\n      } else if (eintrag_a.datum() < eintrag_b.datum()) {\r\n        return 1;\r\n      } else {\r\n        if (eintrag_a.timestamp() > eintrag_b.timestamp()) {\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _bilanzieren() {\r\n    let monatsbilanz = 0;\r\n    this._eintraege.forEach((eintrag) => {\r\n      if (eintrag.typ() === \"einnahme\") {\r\n        monatsbilanz += eintrag.betrag();\r\n      } else {\r\n        monatsbilanz -= eintrag.betrag();\r\n      }\r\n    });\r\n    this._bilanz = monatsbilanz;\r\n  }\r\n\r\n  _html_generieren() {\r\n    let monatsliste = document.createElement(\"article\");\r\n    monatsliste.setAttribute(\"class\", \"monatsliste\");\r\n    // Add data attributes for the year and month\r\n    monatsliste.setAttribute(\"data-year\", this._jahr);\r\n    monatsliste.setAttribute(\"data-month\", this._monat);\r\n\r\n    let ueberschrift = document.createElement(\"h2\");\r\n\r\n    let monat_jahr = document.createElement(\"span\");\r\n    monat_jahr.setAttribute(\"class\", \"monat-jahr\");\r\n    monat_jahr.textContent = `${new Date(\r\n      this._jahr,\r\n      this._monat - 1\r\n    ).toLocaleString(\"de-DE\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    })}`;\r\n    ueberschrift.insertAdjacentElement(\"afterbegin\", monat_jahr);\r\n\r\n    let monatsbilanz = document.createElement(\"span\");\r\n    if (this._bilanz >= 0) {\r\n      monatsbilanz.setAttribute(\"class\", \"monatsbilanz positiv\");\r\n    } else {\r\n      monatsbilanz.setAttribute(\"class\", \"monatsbilanz negativ\");\r\n    }\r\n    monatsbilanz.textContent = `${(this._bilanz / 100)\r\n      .toFixed(2)\r\n      .replace(/\\./, \",\")} â‚¬`;\r\n    ueberschrift.insertAdjacentElement(\"beforeend\", monatsbilanz);\r\n\r\n    monatsliste.insertAdjacentElement(\"afterbegin\", ueberschrift);\r\n\r\n    let eintragsliste = document.createElement(\"ul\");\r\n    this._eintraege.forEach((eintrag) => {\r\n      eintragsliste.insertAdjacentElement(\"beforeend\", eintrag.html());\r\n    });\r\n    monatsliste.insertAdjacentElement(\"beforeend\", eintragsliste);\r\n\r\n    return monatsliste;\r\n  }\r\n\r\n  _aktualisieren() {\r\n    this._eintraege_sortieren();\r\n    this._bilanzieren();\r\n    this._html = this._html_generieren();\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.7f68d4f9.js.map","sourceRoot":"/__parcel_source_root/"}