{"mappings":"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","sources":["Haushaltsbuch/src/js/classes/Haushaltsbuch.js"],"sourcesContent":["\"use strict\";\r\n\r\nclass Haushaltsbuch {\r\n  constructor() {\r\n    this._eintraege = [];\r\n    this._fixedExpenses = []; // Initialize the fixedExpenses array\r\n    this._navigationsleiste = new Navigationsleiste();\r\n    this._eingabeformular = new Eingabeformular();\r\n    this._monatslistensammlung = new Monatslistensammlung();\r\n    this._gesamtbilanz = new Gesamtbilanz();\r\n    this._fixkostenPopup = new FixkostenPopup();\r\n    this._chartCreator = new ChartCreator(); // Create an instance of ChartCreator\r\n    this._createAndAppendButtons();\r\n    this._wiederherstellen();\r\n  }\r\n\r\n  showFixkostenPopup() {\r\n    const currentMonth = new Date().getMonth() + 1;\r\n    const currentYear = new Date().getFullYear();\r\n    const monatsliste = this._monatslistensammlung.getEntriesByMonthAndYear(\r\n      currentMonth,\r\n      currentYear\r\n    );\r\n\r\n    const fixkostenPopup = new FixkostenPopup(monatsliste);\r\n    fixkostenPopup.show();\r\n  }\r\n\r\n  _ShowFixKosten() {\r\n    const showFixkostenPopupButton = document.getElementById(\r\n      \"show-fixkosten-popup\"\r\n    );\r\n    if (showFixkostenPopupButton) {\r\n      showFixkostenPopupButton.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        this._fixkostenPopup.show();\r\n      });\r\n    }\r\n  }\r\n\r\n  _createButtonContainer() {\r\n    const div = document.createElement(\"div\");\r\n    div.id = \"button-container\";\r\n    return div;\r\n  }\r\n\r\n  _createShowFixkostenPopupButton(container) {\r\n    const button = document.createElement(\"button\");\r\n    button.id = \"show-fixkosten-popup\";\r\n    button.textContent = \"🏡\";\r\n    container.appendChild(button); // Append the button to the container\r\n    return button;\r\n  }\r\n\r\n  _createShowChartPopupButton(container) {\r\n    const button = document.createElement(\"button\");\r\n    button.id = \"show-chart-popup\";\r\n    button.textContent = \"🚀\";\r\n    button.addEventListener(\"click\", () => {\r\n      this._chartCreator.show();\r\n    });\r\n    container.appendChild(button); // Append the button to the container\r\n    return button;\r\n  }\r\n\r\n  _createAndAppendButtons() {\r\n    const buttonContainer = this._createButtonContainer();\r\n    this._createShowFixkostenPopupButton(buttonContainer);\r\n    this._createShowChartPopupButton(buttonContainer);\r\n    // Append the buttonContainer to the appropriate element\r\n    // Here we append it to the body, but you may need to adjust this\r\n    document.body.appendChild(buttonContainer);\r\n  }\r\n\r\n  _createChartPopup() {\r\n    // Create the popup container\r\n    const popup = document.createElement(\"div\");\r\n    popup.className = \"chart-popup\";\r\n\r\n    // Create the close button\r\n    const closeButton = document.createElement(\"button\");\r\n    closeButton.textContent = \"Close\";\r\n\r\n    // Add an event listener to the close button\r\n    closeButton.addEventListener(\"click\", () => {\r\n      // Remove the popup from the DOM when the close button is clicked\r\n      popup.remove();\r\n      this._popup = null; // Clear the popup variable\r\n    });\r\n\r\n    // Append the close button to the popup container\r\n    popup.appendChild(closeButton);\r\n\r\n    // Append the popup container to the body\r\n    document.body.appendChild(popup);\r\n\r\n    this._popup = popup; // Update the popup variable\r\n  }\r\n\r\n  eintrag_hinzufuegen(eintragsdaten) {\r\n    let neuer_eintrag = new Eintrag(\r\n      eintragsdaten.titel,\r\n      eintragsdaten.betrag,\r\n      eintragsdaten.typ,\r\n      eintragsdaten.datum\r\n    );\r\n    this._eintraege.push(neuer_eintrag);\r\n    this._monatslistensammlung.aktualisieren(this._eintraege);\r\n    this._gesamtbilanz.aktualisieren(this._eintraege, this._fixedExpenses);\r\n    this._speichern();\r\n  }\r\n\r\n  eintrag_entfernen(timestamp) {\r\n    let start_index;\r\n    for (let i = 0; i < this._eintraege.length; i++) {\r\n      if (this._eintraege[i].timestamp() === parseInt(timestamp)) {\r\n        start_index = i;\r\n        break;\r\n      }\r\n    }\r\n    this._eintraege.splice(start_index, 1);\r\n    this._monatslistensammlung.aktualisieren(this._eintraege);\r\n    this._gesamtbilanz.aktualisieren(this._eintraege, this._fixedExpenses);\r\n    this._speichern();\r\n  }\r\n\r\n  _speichern() {\r\n    localStorage.setItem(\"eintraege\", JSON.stringify(this._eintraege));\r\n\r\n    localStorage.setItem(\"fixedExpenses\", JSON.stringify(this._fixedExpenses)); //\r\n  }\r\n\r\n  addFixedExpense(expenseData) {\r\n    const newFixedExpense = new FixedExpense(\r\n      expenseData.title,\r\n      expenseData.amount,\r\n      expenseData.category\r\n    );\r\n    this._fixedExpenses.push(newFixedExpense);\r\n    this._speichern();\r\n  }\r\n\r\n  _wiederherstellen() {\r\n    let gespeicherte_eintraege = localStorage.getItem(\"eintraege\");\r\n    if (gespeicherte_eintraege !== null) {\r\n      JSON.parse(gespeicherte_eintraege).forEach((eintrag) => {\r\n        this.eintrag_hinzufuegen({\r\n          titel: eintrag._titel,\r\n          betrag: eintrag._betrag,\r\n          typ: eintrag._typ,\r\n          datum: new Date(eintrag._datum),\r\n        });\r\n      });\r\n    }\r\n\r\n    let storedFixedExpenses = localStorage.getItem(\"fixedExpenses\");\r\n    if (storedFixedExpenses !== null) {\r\n      JSON.parse(storedFixedExpenses).forEach((expense) => {\r\n        this.addFixedExpense({\r\n          title: expense.title,\r\n          amount: expense.amount,\r\n          category: expense.category,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this._navigationsleiste.anzeigen();\r\n    this._eingabeformular.anzeigen();\r\n    this._monatslistensammlung.anzeigen();\r\n    this._gesamtbilanz.anzeigen();\r\n    this._speichern();\r\n    this._ShowFixKosten();\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.f063a342.js.map","sourceRoot":"/__parcel_source_root/"}